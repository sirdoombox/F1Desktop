<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:controls="clr-namespace:F1Desktop.Controls"
                    xmlns:converters="clr-namespace:F1Desktop.Converters"
                    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI">
    <Style x:Key="Styles.CountdownElement" TargetType="{x:Type controls:CountdownElement}">
        <Style.Resources>
            <system:Double x:Key="CircleSize">65</system:Double>
            <converters:IntThresholdToBoolConverter x:Key="IntThresholdConverter" />
            <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="{adonisUi:Space 1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CountdownElement}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Ellipse Grid.Row="0"
                                 Stroke="{DynamicResource {x:Static adonisUi:Brushes.AccentHighlightBrush}}"
                                 StrokeThickness="2"
                                 HorizontalAlignment="Center"
                                 Width="{StaticResource CircleSize}"
                                 Height="{StaticResource CircleSize}">
                            <Ellipse.Style>
                                <Style TargetType="{x:Type Ellipse}">
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding IsLightOut, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="True">
                                            <Setter Property="Fill"
                                                    Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding IsLightOut, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="False">
                                            <Setter Property="Fill"
                                                    Value="DarkRed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                        <TextBlock Grid.Row="0"
                                   Text="{Binding CountdownValue, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontSize="24">
                            <TextBlock.Effect>
                                <DropShadowEffect />
                            </TextBlock.Effect>
                        </TextBlock>
                        <TextBlock Grid.Row="1"
                                   Margin="0 8 0 0"
                                   Text="{Binding DisplayText, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Entirely unused, but keeping it around for now. -->
    <Style x:Key="Styles.CountdownElement.Hollow" TargetType="{x:Type controls:CountdownElement}">
        <Style.Resources>
            <system:Double x:Key="OuterRadius">50</system:Double>
            <system:Double x:Key="InnerRadius">40</system:Double>
            <Point x:Key="Point" X="{StaticResource OuterRadius}" Y="{StaticResource OuterRadius}" />
            <converters:IntThresholdToBoolConverter x:Key="IntThresholdConverter" />
            <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Grid.Column" Value="1" />
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CountdownElement}">
                    <Grid Margin="5">
                        <Path Stroke="{DynamicResource {x:Static adonisUi:Brushes.AccentHighlightBrush}}"
                              StrokeThickness="2"
                              HorizontalAlignment="Center">
                            <Path.Style>
                                <Style TargetType="{x:Type Path}">
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding IsLightOut, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="True">
                                            <Setter Property="Fill"
                                                    Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding IsLightOut, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="False">
                                            <Setter Property="Fill"
                                                    Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                            <Path.Data>
                                <CombinedGeometry GeometryCombineMode="Xor">
                                    <CombinedGeometry.Geometry1>
                                        <EllipseGeometry RadiusX="{StaticResource OuterRadius}"
                                                         RadiusY="{StaticResource OuterRadius}"
                                                         Center="{StaticResource Point}" />
                                    </CombinedGeometry.Geometry1>
                                    <CombinedGeometry.Geometry2>
                                        <EllipseGeometry RadiusX="{StaticResource InnerRadius}"
                                                         RadiusY="{StaticResource InnerRadius}"
                                                         Center="{StaticResource Point}" />
                                    </CombinedGeometry.Geometry2>
                                </CombinedGeometry>
                            </Path.Data>
                        </Path>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding CountdownValue, RelativeSource={RelativeSource TemplatedParent}}"
                                       Grid.Row="1"
                                       Grid.Column="1" />
                            <TextBlock Text="{Binding DisplayText, RelativeSource={RelativeSource TemplatedParent}}"
                                       Grid.Row="2"
                                       Grid.Column="1" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>